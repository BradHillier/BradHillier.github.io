@import 'variables';


@mixin for-size($size) {
    @if $size == phone-only {
      @media (max-width: 599px) { @content; }
    } @else if $size == tablet-portrait-up {
      @media (min-width: 600px) { @content; }
    } @else if $size == tablet-landscape-up {
      @media (min-width: 992px) { @content; }
    } @else if $size == desktop-up {
      @media (min-width: 1200px) { @content; }
    } @else if $size == big-desktop-up {
      @media (min-width: 1800px) { @content; }
    }
}

/** 
 * BUG: This is overtop of the image and text and needs to be put behind them
 */
 @mixin grain {
    content: '';
    overflow: hidden;
    position: absolute;
    z-index: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("../../../public/grain.jpg");
    opacity: 5%;
}

@mixin outline($color: $gray-border, $radius: $border-radius) {
    content: '';
    z-index: 10;
    position: absolute;
    outline: 2px solid;
    outline-offset: -2px;
    border-radius: 20px;
    inset: 0;
    width: 100%;
    height: 100%;

    @if $color == "dark" {
        outline-color: $dark-gray-border;
    } @else if $color == "light" {
        outline-color: $gray-border;
    } @else {
        outline-color: $color;
    }

    @if $radius == "circle" {
        border-radius: 50%;
    } @else {
        border-radius: $radius;
    }
}


@mixin rounded {
    border-radius: $border-radius;
    overflow: hidden;
}

@mixin circle($size) {
    border-radius: 9999px;
    height: $size;
    aspect-ratio: 1;
}

@mixin center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin flex-column {
    display: flex;
    flex-direction: column;
}


@mixin button-wrapper {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;

    button {
        width: 100%;
        flex-grow: 1;

    }

    @include for-size(tablet-portrait-up) {
        gap: 1rem;
        button {
            padding: 10px 24px;
        }
    }
    a {
        flex-grow: 1;

        @include for-size(tablet-portrait-up) {
            flex-grow: 0
        }
    }
}


@mixin card {
    @include rounded;
    &::before {
        @include grain;
        @include rounded;
        pointer-events: none;
    }

    &::after {
        @include outline;
        pointer-events: none;
    }
    background-color: $light-background-color; //(in srgb, $background-color, white 10%); 
    padding: 2rem;          // should be a variable
}

@mixin gradient-background {
    background: linear-gradient(90deg, $primary, $secondary);
}

@mixin edge-gradient($color: $background-color, $width: 20px) {
    &::before, &::after {
        content: "";
        position: absolute;
        z-index: 1;
        pointer-events: none;
        width: 2em;
        height: 100%;
    }
    &::before {
        left: 0;
        background-image: linear-gradient(to left, rgba(255,255,255,0), $color 90%);
    }
    &::after {
        right: 0;
        background-image: linear-gradient(to right, rgba(255,255,255,0), $color 90%);

    }
}